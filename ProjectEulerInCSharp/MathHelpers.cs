using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Threading.Tasks;

namespace ProjectEulerInCSharp
{
    public static class MathHelpers
    {
       
        /// <summary>
        ///Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
        ///By starting with 1 and 2, the first 10 terms will be:
        ///1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        ///Return a list of all Fibonacci terms less that the given limit.
        /// </summary>
        /// <param name="limit"></param>
        /// <returns></returns>
        public static List<int> FibonacciNumbersLessThan(int limit)
        {
            if (limit < 0) { throw new ArgumentOutOfRangeException("limit", "too negative"); }

            List<int> l = new List<int>();
            l.Add(1);
            l.Add(2);

            for (int i = 2; true; i++)
            {
                int n = l[i - 1] + l[i - 2];
                if (n >= limit)
                {
                    break;
                }
                l.Add(n);
            }
            return l;
        }

    }
}
